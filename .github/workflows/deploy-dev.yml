name: Deploy Dev

on:
  push:
    branches: ["dev"]
  pull_request:
    types: [closed]
    branches: ["dev"]
  workflow_dispatch: {}

concurrency:
  group: dev-deploy
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # 支持 push、PR merged 以及手动触发（workflow_dispatch）
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    environment:
      name: dev
      url: ${{ vars.DEPLOY_PUBLIC_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Add known_hosts
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -p "${{ secrets.SSH_PORT || 22 }}" ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Prepare tmp dir (dev)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -euo pipefail
            BASE_DIR="${{ secrets.DEPLOY_BASE_DIR }}"
            TMP_DIR="$BASE_DIR/.tmp_dev_${{ github.run_id }}_${{ github.run_number }}"
            mkdir -p "$TMP_DIR"

      - name: Upload dist to tmp (dev)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: "dist/**"
          target: "${{ secrets.DEPLOY_BASE_DIR }}/.tmp_dev_${{ github.run_id }}_${{ github.run_number }}"
          rm: false

      - name: Sync tmp to target (rsync, keep .user.ini)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -euo pipefail
            BASE_DIR="${{ secrets.DEPLOY_BASE_DIR }}"
            TARGET_DIR="$BASE_DIR/dev"
            TMP_DIR="$BASE_DIR/.tmp_dev_${{ github.run_id }}_${{ github.run_number }}"
            # 1) 目标安全校验
            case "$TARGET_DIR" in
              "$BASE_DIR"/dev) ;;
              *) echo "Refuse to touch unexpected target: $TARGET_DIR" >&2; exit 1;;
            esac
            # 2) 确认临时目录存在；展开 dist 子目录
            test -d "$TMP_DIR" || { echo "tmp missing: $TMP_DIR" >&2; exit 1; }
            if [ -d "$TMP_DIR/dist" ]; then mv "$TMP_DIR/dist"/* "$TMP_DIR" && rmdir "$TMP_DIR/dist" || true; fi
            mkdir -p "$TARGET_DIR"
            # 3) 用 rsync 同步（排除 .user.ini），无 rsync 时采用兼容方案
            if command -v rsync >/dev/null 2>&1; then
              rsync -a --delete --exclude='.user.ini' "$TMP_DIR"/ "$TARGET_DIR"/
            else
              echo "WARN: rsync not found, fallback to copy" >&2
              find "$TARGET_DIR" -mindepth 1 -not -name '.user.ini' -exec rm -rf {} +
              cp -a "$TMP_DIR"/. "$TARGET_DIR"/
            fi
            rm -rf "$TMP_DIR"
