name: Deploy Prod (Tag)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      target_tag:
        description: '要部署/回滚的 Tag（如 v1.0.0）'
        required: false
        type: string

concurrency:
  group: prod-deploy
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: ${{ vars.DEPLOY_PUBLIC_URL_PROD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve tag to deploy
        id: resolve
        run: |
          TAG="${{ inputs.target_tag }}"
          if [ -z "$TAG" ]; then TAG="${{ github.ref_name }}"; fi
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Checkout target tag
        run: |
          git fetch --tags --force
          git checkout -f "${TAG}" || git checkout -f "refs/tags/${TAG}"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Add known_hosts
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -p "${{ secrets.PROD_SSH_PORT || 22 }}" ${{ secrets.PROD_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Prepare tmp dir (prod)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          port: ${{ secrets.PROD_SSH_PORT || 22 }}
          script: |
            set -euo pipefail
            BASE_DIR="${{ secrets.PROD_BASE_DIR }}"
            TMP_DIR="$BASE_DIR/.tmp_prod_${{ github.run_id }}_${{ github.run_number }}"
            mkdir -p "$TMP_DIR"

      - name: Upload dist to tmp (prod)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          port: ${{ secrets.PROD_SSH_PORT || 22 }}
          source: "dist/**"
          target: "${{ secrets.PROD_BASE_DIR }}/.tmp_prod_${{ github.run_id }}_${{ github.run_number }}"
          rm: false

      - name: Activate new version (safe swap)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          port: ${{ secrets.PROD_SSH_PORT || 22 }}
          script: |
            set -euo pipefail
            BASE_DIR="${{ secrets.PROD_BASE_DIR }}"
            TARGET_DIR="$BASE_DIR/prod"
            TMP_DIR="$BASE_DIR/.tmp_prod_${{ github.run_id }}_${{ github.run_number }}"
            BAK_DIR="$BASE_DIR/.bak_prod_${{ github.run_id }}_${{ github.run_number }}"
            case "$TARGET_DIR" in
              "$BASE_DIR"/prod) ;;
              *) echo "Refuse to touch unexpected target: $TARGET_DIR" >&2; exit 1;;
            esac
            test -d "$TMP_DIR" || { echo "tmp missing: $TMP_DIR" >&2; exit 1; }
            if [ -d "$TMP_DIR/dist" ]; then mv "$TMP_DIR/dist"/* "$TMP_DIR" && rmdir "$TMP_DIR/dist" || true; fi
            if [ -d "$TARGET_DIR" ]; then mv "$TARGET_DIR" "$BAK_DIR"; fi
            mv "$TMP_DIR" "$TARGET_DIR"
            rm -rf "$BAK_DIR"
